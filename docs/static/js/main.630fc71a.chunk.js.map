{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGirdItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setcategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","category","type","value","onChange","target","getGif","a","url","encodeURI","fetch","then","r","json","data","gifs","map","img","id","title","images","downsized_medium","GifGirdItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","imgs","useFetchGifs","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"yMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAe5C,OACI,sBAAMC,SARW,SAACC,GAClBA,EAAEC,iBAEFN,GAAe,SAAAO,GAAQ,OAAKL,GAAL,mBAAoBK,OAC3CJ,EAAc,KAId,SACI,uBACIK,KAAK,OACLC,MAAOP,EACPQ,SAhBe,SAAAL,GACvBF,EAAcE,EAAEM,OAAOF,a,+BCRlBG,EAAM,uCAAG,WAAOL,GAAP,qBAAAM,EAAA,6DACZC,EADY,iDACqCC,UAAUR,GAD/C,+DAGGS,MAAMF,GAAKG,MAAM,SAACC,GAAD,OAAOA,EAAEC,UAH7B,uBAGXC,EAHW,EAGXA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXX,IAAKS,EAAIG,OAAOC,iBAAiBb,QATvB,kBAaXO,GAbW,2CAAH,sDCENO,EAAc,SAACL,GAExB,OADAM,QAAQC,IAAIP,GAGR,sBAAKQ,UAAU,2BAAf,UACI,4BAAIR,EAAIE,QACR,qBAAKO,IAAKT,EAAIT,IAAKmB,IAAKV,EAAIE,YCH3BS,EAAU,SAAC,GAAkB,IAAhB3B,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EAEdN,mBAAS,CAC/BmB,KAAM,GACNe,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAuBxC,OAhBAC,qBAAW,WAEP1B,EAAQL,GACHU,MAAM,SAAAsB,GAEHF,EAAS,CACLjB,KAAMmB,EACNJ,SAAS,SAItB,CAAC5B,IAKG6B,EDpBwBI,CAAajC,GAAhCmB,EAFyB,EAE9BN,KAF8B,EAEjBe,QASpB,OACI,qCACI,oBAAIJ,UAAU,sBAAd,SAAqCxB,IACrC,qBAAKwB,UAAU,aAAf,SAGQL,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEpBxBiB,EAAe,WAAO,IAAD,EAEMxC,mBAAS,CAAC,uBAFhB,mBAEvByC,EAFuB,KAEX1C,EAFW,KAQ9B,OACI,gCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEQ0C,EAAWpB,KAAI,SAAAf,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MCdjCoC,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.630fc71a.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setcategorias}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = (e =>{\r\n        setInputValue(e.target.value);\r\n    })\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        \r\n        setcategorias( category =>[ inputValue, ...category] );\r\n        setInputValue('');\r\n        \r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n        \r\n    )\r\n}\r\n//defino que propiedad debe ser obligatoria \r\nAddCategory.propTypes = {\r\n    setcategorias : PropTypes.func.isRequired\r\n}\r\n","export const getGif = async( category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category)}&limit=10&api_key=HxIs4PB476PMfVHZMKxCjBOPIFy09qGF`;\r\n    \r\n    const {data} = await fetch(url).then( (r) => r.json());\r\n\r\n    const gifs = data.map( img =>{\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n\r\n        }\r\n    })\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGirdItem = (img) => {\r\n    console.log(img)\r\n    return (\r\n        \r\n        <div className='card animate__fadeInDown'>\r\n            <p>{img.title}</p>\r\n            <img src={img.url} alt={img.title}/>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGirdItem } from './GifGirdItem';\r\n\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  \r\n    const {data:images, loading} = useFetchGifs(category);\r\n   /**  const [images, setImages] = useState([])\r\n\r\n    useEffect(() => {\r\n        getGif(category)\r\n            .then(imgs => setImages(imgs));\r\n\r\n    }, [category])\r\n*/\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__fadeInDown\">{category}</h3>\r\n            <div className='card-gird '>\r\n\r\n                {\r\n                    images.map(img => (\r\n                        <GifGirdItem\r\n                            key={img.id}\r\n                            {...img} />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n","import { useState, useEffect } from 'react'\r\nimport { getGif } from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n        getGif( category )\r\n            .then( imgs => {\r\n                \r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            })\r\n\r\n    }, [category])\r\n\r\n\r\n\r\n\r\n    return state; // { data:[], loading: true };\r\n\r\n\r\n}\r\n","import React, { useState } from 'react'               //usar rafc para importar automaticamente react\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categorias, setcategorias] = useState(['Sakura Card Captor'])\r\n    /* const handleAdd = () =>{\r\n         setcategorias([...categorias, 'HunterXHunter']);\r\n     }\r\n */\r\n\r\n    return (\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setcategorias={setcategorias} />\r\n            <ol>\r\n                {\r\n                    categorias.map(category => (\r\n                        <GifGrid\r\n                            key={category}\r\n                            category={category}\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { GifExpertApp } from './GifExpertApp';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n    <GifExpertApp />,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}